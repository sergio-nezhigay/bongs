{% comment %}
  Display variant options for a product

  @param selected_variant
{% endcomment %}

<fieldset
  class="
    {% unless show_swatches %}
      options-selection__radios
    {% else %}
      options-selection__swatches
      options-selection__swatches--{{ swatches_option_style }}
    {% endunless %}
  "
>
  <legend class="options-selection__option-header">
    <span
      class="options-selection__option-name"
      data-variant-option-name="{{ 'product.variants.chosen_option_html' | t: option: option.name, value: option.selected_value | escape }}"
      data-variant-option-choose-name="{{ 'product.variants.choose_option' | t: option: option.name }}"
    >
      {% if selected_variant %}
        {{ 'product.variants.chosen_option_html' | t: option: option.name, value: option.selected_value }}
      {% else %}
        {{ 'product.variants.choose_option' | t: option: option.name }}
      {% endif %}
    </span>
  </legend>

  <div
    class="options-selection__option-values"
    data-variant-option
    data-variant-option-index="{{ option_index }}"
    data-variant-option-chosen-value="{% if selected_variant %}{{ option.selected_value }}{% else %}false{% endif %}"
  >
    {% for value in option.values %}
      <div
        class="
          options-selection__option-value
          {% if selected_variant and option.selected_value == value %}options-selection__option-value--selected{% endif %}
        "
        data-variant-option-value-wrapper
      >
        <label
          class="
            options-selection__option-value-label
          "
        >
          <input
            class="
              options-selection__option-value-input
            "
            type="radio"
            name="{{ option.name | url_encode }}"
            value="{{ value | escape }}"
            tabindex="0"
            aria-label="{{ value | escape }}"
            {% if selected_variant and option.selected_value == value %}checked{% endif %}
            data-variant-option-value
            data-variant-option-value-index="{{ option_index }}"
          >

          {% assign color_swatch_name = value | escape | remove: ' ' %}
          <span
            class="
              {% unless show_swatches %}
                options-selection__option-value-name
              {% else %}
                options-selection__option-swatch-wrapper
              {% endunless %}
            "
            tabindex="-1"
            {% if show_swatches %}
              data-swatch-tooltip="{{ value | escape }}"
              style="{% if color_swatch_name == "Colorful" %}background-color: #e5eddb;{% endif %}--swatch-color: {{ value | escape | remove: ' ' }}"
            {% endif %}
          >
            {% unless show_swatches %}
              {{ value }}
            {% else %}
              {% assign use_variant_images = false %}
              {% if swatches_option_style == 'variant_image' %}
                {% assign use_variant_images = true %}
              {% endif %}
              {% assign use_aspect_ratio = false %}
              {% if swatches_shape == 'square' %}
                {% assign use_aspect_ratio = true %}
              {% endif %}
              {% capture swatch_styles %}
                {% assign color_name = value %}
                {% assign use_variant_images = use_variant_images %}
                {% assign swatch_product = product %}
                {% assign swatch_option_key = swatch_option_key %}
                {% assign swatch_size = swatch_size %}
                {% assign use_aspect_ratio = use_aspect_ratio %}
                {% comment %}Inject @pixelunion/shopify-variants-ui/options-radios-swatch-styles begin{% endcomment %}
                {%- capture _ -%}
                  {% comment %}
                    @param color_name {string}
                      Color name for which to find a suitable background
                
                    @param use_variant_images {boolean} [Optional - required if using variant images]
                      Use variant images as pattern images instead of the standard manual pattern images.
                
                    @param swatch_product {product} [Optional - required if using variant images]
                      Product from which to use variant images.
                
                    @param swatch_option_key {string} [Optional - required if using variant images]
                      option that contains swatch variants, one of `option1`, `option2`, or `option3`.
                
                    @param swatch_size {integer} [Optional - required if using variant images]
                      Pixel height of swatch.
                
                    @param use_aspect_ratio {boolean} [Optional]
                      Set swatch aspect ratio based on variant image?
                
                    @param swatch_file_type {string} [Optional]
                      Used to determine where to check for custom swatch images (Assets or Files)
                
                    Outputs a string CSS background properties
                  {% endcomment %}
                
                  {%- assign use_variant_images = use_variant_images | default: false -%}
                  {%- assign swatch_product = swatch_product | default: blank -%}
                  {%- assign swatch_option_key = swatch_option_key | default: blank -%}
                  {%- assign swatch_size = swatch_size | default: 32 -%}
                  {%- assign use_aspect_ratio = use_aspect_ratio | default: true, allow_false: true -%}
                  {%- assign swatch_file_type = swatch_file_type | default: 'assets' -%}
                
                  {%- assign swatch_bg_color = blank -%}
                  {%- assign swatch_bg_image = blank -%}
                  {%- assign swatch_bg_variables = blank -%}
                  {%- assign swatch_colors = swatches_custom_colors -%}
                  {%- assign swatch_colors_french = "Rose: #ffd9e0,Topaze: #f7a303,Bleu lait: #89aae2,Violet: #800080,Bleu Jade: #b3c1e0,Blanc noir: #84878b,Slime: #66d252,Vert gris: #66a378,Noir jaune: #afb088,Brun: #c97f7f,Bleu vert: #68b9a7,Gris: #b3b3b3,Sucre d'orge: #b2b8f1,Marron foncé: #772f17,Rouge Bleu: #fe2504,Sucre d'orge: #ffb59d,Bleu rouge: #c290e5,Bleu blanc: #6fa6fe,Brun: #a52a2a,Noir/Gre: #477b37,Brillent dans le noir: #e9cd9b,Bleu vert: #b7dab5,Tangerine: #a44228,Métal à canon: #6f6f6f,Violet | Rose: #7b0c3d,Rouge | Jaune: #fd3323,Vert | Bleu: #29db3a,Jaune | Bleu: #fef832,Bleu | Rouge: #25bbd0,Jaune | Orange: #f26129,Blue | Red: #25bbd0,Green | Blue: #29db3a,Purple | Pink: #7b0c3d,Red | Yellow: #fd3323,Platinum: #d4d4d4,Poppy: #e06346,Periwinkle: #777eb7,Yellow | Blue: #fef832,Teal | Red: #05c2cb,Rouge | Jaune: #fd3323,Jaune | Bleu: #fef832,Jaune | Orange: #f26129,Rose: #e5c1ad,Bleu: #3e3f61,Vert: #008000,Noir: #000000,Or: #ffd700,Bleu: #0000ff,Vert; #008000,Amber: #c69b00,Rouge: #ff0000,Bleu clair: #add8e6,Jaune: #ffff00,Jade Blue: #8097cc,Vert lait: #b7dab5,Purple Blue: #00385a,Smoke: #8d9593,Purple Red: #e399c4,Wine Red: #954e02,Coloré: #e5eddb,Sarcelle: #66b3b3,Argent: #d9d9d9,Vert jaune: #f7d485,Menthe/Sarcelle: #bcc8c5,Rose bleu: #f8e9f1,Vert blanc: #323c19,Blanc/Sarcelle: #8f959a,Violet/Jaune: #c27429,Bleu Jade/Sarcelle: #6b908b,Vert bleu: #727eb4,Vert noir: #869b83,Vert pâle: #98fb98" -%}

                
                  {% comment %} First look for a defined custom color {% endcomment %}
                  {%- assign swatch_colors = swatch_colors | newline_to_br | strip_newlines | split: '<br />' -%}
                  {%- assign swatch_search_color = color_name | downcase -%}

                  {%- for swatch_option in swatch_colors -%}
                    {%- assign swatch_color = swatch_option | split: ':' -%}
                    {%- assign swatch_color_name = swatch_color[0] | strip | downcase -%}
                    {%- assign swatch_color_value = swatch_color[1] | strip -%}
                    {%- if swatch_search_color == swatch_color_name -%}
                      {% capture swatch_bg_color %}
                        background-color: {{ swatch_color_value }};
                      {% endcapture %}
                      {% capture swatch_custom_color %}
                        --swatch-color: {{ swatch_color_value }};
                      {% endcapture %}
                      {%- break -%}
                    {%- endif -%}
                  {%- endfor -%}


                  {%- if swatch_bg_color == blank -%}
                      {%- assign swatch_colors_french = swatch_colors_french  | split: ',' -%}
                      {%- assign swatch_search_color = color_name | downcase -%}
                      {%- for swatch_option in swatch_colors_french -%}
                      {%- assign swatch_color = swatch_option | split: ':' -%}
                      {%- assign swatch_color_name = swatch_color[0] | strip | downcase -%}
                      {%- assign swatch_color_value = swatch_color[1] | strip -%}

                      {%- if swatch_search_color == swatch_color_name -%}
                      {% capture swatch_bg_color %}
                      background-color: {{ swatch_color_value }};
                      {% endcapture %}
                      {% capture swatch_custom_color %}
                      --swatch-color: {{ swatch_color_value }};
                      {% endcapture %}
                      {%- break -%}
                      {%- endif -%}
                      {% endfor %}

                    
                 {% endif %}
                
                  {% comment %} Otherwise default to the raw color name, which will either be a
                  valid named HTML color and displayed as such, or will be ignored by the browser. {% endcomment %}
                  {%- if swatch_bg_color == blank -%}
                    {% capture swatch_bg_color %}
                      background-color: {{ color_name | remove: ' ' | handleize }};
                    {% endcapture %}
                  {%- endif -%} 
                
                  {%- if use_variant_images and swatch_product != blank and swatch_option_key != blank -%}
                    {% for variant in swatch_product.variants %}
                      {% assign option_value_downcased = variant[swatch_option_key] | downcase %}
                      {% if option_value_downcased == swatch_search_color %}
                        {% if variant.image != blank %}
                          {%- assign swatch_image_resolution = swatch_size | times: 2 | prepend: 'x' -%}
                          {%- assign swatch_file_url = variant.image | img_url: swatch_image_resolution, crop: 'center' -%}
                          {%- assign swatch_height = swatch_size | times: 1.0 -%}
                          {%- assign swatch_width = swatch_size | times: 1.0 -%}
                          {%- if use_aspect_ratio -%}
                            {%- assign swatch_width = swatch_size | times: variant.image.aspect_ratio -%}
                          {%- endif -%}
                          {%- capture swatch_bg_image -%}
                            background-image: url('{{- swatch_file_url  -}}');
                            width: {{ swatch_width }}px;
                            border-width: 0; {% comment %}Variant image swatches don't get inset borders{% endcomment %}
                          {%- endcapture -%}
                          {%- assign selected_border_offset = 2 | times: 2 -%}
                          {%- capture swatch_bg_variables -%}
                            --swatch-inner-transform-x: {{ swatch_width | minus: selected_border_offset | divided_by: swatch_width }};
                            --swatch-inner-transform-y: {{ swatch_height | minus: selected_border_offset | divided_by: swatch_height }};
                            --swatch-image: url('{{- swatch_file_url -}}');
                            --swatch-variant-image: url('{{- swatch_file_url -}}');
                          {%- endcapture -%}
                        {% endif %}
                        {%- break -%}
                      {% endif %}
                    {% endfor %}
                  {%- else -%}
                    {% comment %} Then look for a pattern image (only if no custom color found). {% endcomment %}
                    {% assign swatch_file_name = color_name | downcase | handleize | append: '.png' %}
                    {%- if images[swatch_file_name] != blank -%}
                      {%- capture swatch_image_resolution -%}{{ swatch_size | times: 2 }}x{{ swatch_size | times: 2 }}{%- endcapture -%}
                      {%- if swatch_file_type == 'files' -%}
                        {%- assign swatch_file_url = swatch_file_name | file_img_url: swatch_image_resolution, crop: 'center' -%}
                      {%- else -%}
                        {%- assign swatch_file_url = swatch_file_name | asset_img_url: swatch_image_resolution, crop: 'center' | prepend: 'https:' -%}
                      {%- endif -%}
                      {%- capture swatch_bg_image -%}
                        background-image: url('{{- swatch_file_url  -}}');
                      {%- endcapture -%}
                      {%- capture swatch_bg_variables -%}
                        --swatch-image: url('{{- swatch_file_url -}}');
                        --swatch-variant-image: url('{{- swatch_file_url -}}');
                      {%- endcapture -%}
                    {%- endif -%}
                  {%- endif -%}
                
                {%- endcapture -%}
                {{ swatch_bg_color }}
                {{ swatch_bg_image }}
                {{ swatch_custom_color }}
                /* variables */
                {{ swatch_bg_variables }}
                {% comment %}Inject @pixelunion/shopify-variants-ui/options-radios-swatch-styles end{% endcomment %}

              {% endcapture %}
              <div
                class="options-selection__option-swatch"
                {% for variant in swatch_product.variants %}
                  {% assign option_value_downcased = variant[swatch_option_key] | downcase %}
                  {% if option_value_downcased == swatch_search_color %}
                    {% if variant.image != blank %}
                      data-variant-image
                    {% endif %}
                  {% endif %}
                {% endfor %}
                style="{{ swatch_styles | split: '/* variables */' | last | remove: '/* variables */' }}"
              >
                <div
                  class="options-selection__option-swatch-inner"
                  style="{{ swatch_styles | split: '/* variables */' | first }}"
                >
                </div>
              </div>
            {% endunless %}
          </span>
        </label>
      </div>
    {% endfor %}
  </div>
</fieldset>